<?php

namespace lib\core;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-02-25 at 21:26:17.
 */
class RouteTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Route
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    // <editor-fold defaultstate="collapsed" desc="hasVars">

    /**
     * @covers lib\core\Route::hasVars
     */
    public function testHasVars_NoVars()
    {
        $this->object = new Route('', '', '', array());
        $this->assertFalse($this->object->hasVars());
    }

    /**
     * @covers lib\core\Route::hasVars
     */
    public function testHasVars_True()
    {
        $this->object = new Route('', '', '', array('oneVar'));
        $this->assertTrue($this->object->hasVars());
    }

    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="match">

    /**
     * @covers lib\core\Route::match
     */
    public function testMatch_NoMatch()
    {
        $this->object = new Route('a', '', '', array());
        $this->assertFalse($this->object->match('b'));
    }

    /**
     * @covers lib\core\Route::match
     */
    public function testMatch_OneMatch()
    {
        $this->object = new Route('a', '', '', array());
        $matches = $this->object->match('a');
        $this->assertFalse($matches == false);
        $this->assertEquals(1, count($matches));
        $this->assertContains('a', $matches);
    }

    /**
     * @covers lib\core\Route::match
     */
    public function testMatch_Matches()
    {
        $this->object = new Route('/news-(.+)-([0-9]+)\.html', '', '', array());
        $matches = $this->object->match('/news-yaui-205.html');
        $this->assertFalse($matches == false);
        $this->assertEquals(3, count($matches));
        $this->assertContains('yaui', $matches);
        $this->assertContains('205', $matches);
    }

    // </editor-fold>fold
}
